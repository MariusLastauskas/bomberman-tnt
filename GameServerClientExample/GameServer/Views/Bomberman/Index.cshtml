@{
    ViewData["Title"] = "Index";
}
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://unpkg.com/react@16/umd/react.development.js" crossorigin></script>
<script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js" crossorigin></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/0.13.3/JSXTransformer.js"></script>



<h2>Index</h2>

<p>Hello from our View Template!</p>

<div id="root"></div>



<script type="text/jsx">
    window.onkeypress = function(event) {
        let action = '';
        switch(event.keyCode) {
          case 119:
            action = "up";
            break;
          case 97:
            action = "left";
            break;
          case 115:
            action = "down";
            break;
          case 100:
            action = "right";
            break;
          case 32:
            action = "plant";
            break;
          default:
            // code block
        }

    
        axios.patch('https://localhost:44371/api/map', {}, 
        {
            headers: {
                authToken: getCookie('authToken'),
                action: action
            }
        })
    }

    function getCookie(name) {
    var v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
    return v ? v[2] : null;
}

    _tileType = {
        'wall': 'brown',
        'unbreakableWall': 'gray',
        'empty': 'green',
        'player': 'blue'
    }

    Tile = (props) => {
        return (
            <div style={{backgroundColor: _tileType[props.type],
                        width: 50, height: 50}}></div>
        )
    }

    TileMap = () => {
        const [tileMap, setTileMap] = React.useState(null);

        getMap().then(response => {
            setTileMap(response.data);
        });

        console.log(tileMap)
        return (
            <div>
                {tileMap? tileMap.map((row, index) => {
                    return (
                        <div style={{display: 'flex'}}>
                            {row.map((tile, index) => {
                                if (!tile[0]) {
                                    return <Tile type="empty" />;
                                }
                                if (tile[0].destroyable != undefined) {
                                    return tile[0].destroyable ? <Tile type="wall" /> : <Tile type="unbreakableWall" />
                                }
                                return <Tile type="player" />
                            })}
                        </div>);
                }): ''}
            </div>
        );
    }

    const executeCommand = (command) => {
        axios.post('https://localhost:44371/api/interpreter', {}, 
        {
            headers: {
                command: command
            }
        }).then(response => {
            if (response.data.expression.list[0].type == 'color') {
                document.getElementsByTagName('body')[0].style.background = response.data.expression.list[0].color.asset;
            }
            else if (response.data.expression.list[0].type == 'size') {
                document.getElementsByTagName('body')[0].style.fontSize = response.data.expression.list[0].size.asset;
            }
        });
    }

    const Terminal = () => {
        let outbound = '';

        return (
            <div>
                <input type="text" onChange={(e) => {outbound = e.target.value}} />
                <button onClick={() => executeCommand(outbound)}>submit</button>
            </div>
        )
    }

    const getMap = () => {
        return axios.get('https://localhost:44371/api/map')
            //.then(response => {
             //   console.log(response.data);
             //   return response.data;
           // });
    }

    const map = getMap();


    ReactDOM.render(
        <div>
            <Terminal />
            <TileMap />
        </div>,
        document.getElementById('root')
    );
</script>